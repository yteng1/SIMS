<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAk
        6AAAJOgBgmMFHAAABLBJREFUWEfVVmtMHFUUXhITY4zGR0wT/9TE1z/1j4kxTTBpaDaSKiEoLZi0FdtE
        292lhWUpLHspuywzy87MQnltF1cqSFsKpFW09GEFShGU2gRpEyihdQttKaVQxGpN6/Xc62Wcmb2wxMAP
        v+TLZO455zvnvq/pvwB5/e8gUQkXivJnhEiUq3IReoGZVxYJCQmPIlH6o9CnYC2hoDbmsrJ4NzX1OWNy
        SkE+z1yWBXEwtDsLRankQ7v9MdZGkbZp02vcAnzSZeaiIhuhV8j0FBT717KmJSEOxILzwiDQb9m9+5l5
        W16RZ7M+MfPzybOf5OevZn6mfHfJWxA7Q+2icg+J/iRmWhSQXFGTqxSVoUKfbIFRga/BpucDWB/tSPDv
        At/fdTZRvoeKYxRhy3W9pwtaZiJBuWtOT3+cpYuGJTt3HQzbX7zgZaEgT6akpDzC0vHhEmTEDTbQI5fj
        smAtVqr34T2lAa6PlkiQ53KQ+02WZnEUCkolT4SwrvEAvnjxPJ69PYbnZq5RTt38Bff2naXF8GIg+Z9O
        r/g2k4+NPE9polFkT6mCu3u68K/T42piI6cnI7jx8GFdHKWgTKVbLAvPvRFQ8WmjSEfXd2qiO9D7c+d6
        8dft3+Djp07g4eGfVRsZmXDDF7pYQiRIViYfjY+273ppR1Zeot3lTi/w+jJhyz3QBleH69SeXx8fwZW1
        YZ04YcuXR/Es8xmLDOMiv2FdCPKFPI+4LctZ9P7HmbnrMjIynqLJrQ7HGti793XOBpL5JcKkiH3762mb
        VB3CoYaDuObzRuwNVNK2053fqiPR0NSk0zASRjliNpsfNmU6nDaeg5bjVy9R0Usw1OTfVxHE9c1HcEPL
        Ucr9Ta3Q4zLsr6hRR6rzTEeUjpHJyWmrl1TAnamrVLTvh7P0vzJcryafpw+SExvZEcS3H9aIVoPHJRcw
        eeMyFR0Y6Kf/gWBYl5yMRrFSgT1Subo9v+/tjtIxkhZgdTg/4Bm1HBz8iYpO34pgX3kVPXiCMPckMSEp
        iPg1tbZSP8IjbV9F6WhJzobEtLQnTfHx8Q/BTw554cC3FbZLl9H5kEaYjAKZb9LulsrUUzBQE8IT10bV
        QkUoVKtBb0ZBOg4X2yE4F4Jw1qynu4AHKGREG0wOoeGhf/f66MgFfKC5mZ58e0Of0vPg1o0rqv3YyXZd
        ckLomMzkY8NVImUZBcgKj1wZUpMsxL4fe3RxhNCh+za782UmHxtQAPdaLglU4B5YXOQkNCa+eX104XmH
        W3C7HT3L5BeHAwlr4Cn2G1eI0be3Ch9sbcHHTrTjNhh+ckGR9cDznSessQGbzfYES8PHVkv287BYbvME
        loWi3Alp4v7JxkFmbsE2buAykTx21m/YsIqli0YKXBDk0ogKJu85Qe5YymsJ/O7CcHfzbLANgyzVwsiw
        WldpiwDBuXy310xsO3Y6XoWLq04nOk9apJS5ZYuFvKDjIM6vtUPxtaSd6MQEKQLEuoHDOcjzBmumSN+8
        9XWtsJpAkMeYiwqXCNtZUCaguDL4XVryWEjeuPFFbgGiNMhcVhZJSUlP8wqAXp5hLisPWEwh5FNmgLOE
        cL5PuLz+VGb+P8Fk+huy/cpF254PpQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>